import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

def freeKeystorePropertiesFile = rootProject.file("free.property")
def freeProperties = new Properties()
freeProperties.load(new FileInputStream(freeKeystorePropertiesFile))

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "ru.yourok.torrserve"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 85
        versionName "1.1.85"
    }
    signingConfigs {
        release {
            keyAlias freeProperties['keyAlias']
            keyPassword freeProperties['keyPassword']
            storeFile rootProject.file(freeProperties['storeFile'])
            storePassword freeProperties['storePassword']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "TorrServe_${versionName}.apk"
                }
            }
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.tvprovider:tvprovider:1.0.0'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'

    implementation 'cz.msebera.android:httpclient:4.5.8'

    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.google.code.gson:gson:2.8.6'

    implementation 'com.google.firebase:firebase-core:17.4.0'

    //Root
    implementation "com.github.topjohnwu.libsu:core:2.5.1"
    implementation 'com.google.android.material:material:1.2.1'
}

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
}

class WriteVersion implements Plugin<Project> {
    void apply(Project project) {
        project.task("WriteVersion") {
            project.gradle.projectsEvaluated {
                println "Write: release.json"

                def appId = "$project.android.defaultConfig.applicationId"
                def version = "$project.android.defaultConfig.versionName"
                def versionCode = "$project.android.defaultConfig.versionCode"

                println appId
                println version

                def stringsFile = new File("release.json")
                def json = """{
 "Name": "${appId}",
 "Version": "${version}",
 "VersionCode": "${versionCode}",
 "BuildDate": "${new SimpleDateFormat("dd.MM.yyyy").format(new Date())}",
 "Link": "https://github.com/YouROK/TorrServe/releases/download/${version}/TorrServe_${version}.apk"
}
"""
                stringsFile.write(json)
            }
        }
    }
}

apply plugin: WriteVersion
apply plugin: 'com.google.gms.google-services'
